syntax = "proto3";

package envoy.extensions.filters.network.source_prepend.v3;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.source_prepend.v3";
option java_outer_classname = "SourcePrependProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/source_prepend/v3;source_prependv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Source Prepend Filter]
// Prepends 4 bytes as the source port in little endian to every packet.
// [#extension: envoy.filters.network.source_prepend]

message SourcePrependConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.listener.network.v2.SourcePrependConfig";

  // If we should actually prepend source data, default is true.
  google.protobuf.BoolValue enable = 1;
}
